server:
  port: 8080

spring:
  application:
    name: platform-gateway-service
    instance_id: ${random.uuid}
  cloud:
    gateway:
      routes:
        - id: middleware
          uri: lb://middleware-service
          predicates:
            - Path=/middleware/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=1
            - TokenRelay=
            - RemoveRequestHeader=user
            - AddUserInfoHeader=
            - RemoveRequestHeader=cookie
            - RemoveRequestHeader=authorization
        - id: crm
          uri: lb://crm-service
          predicates:
            - Path=/crm/**
            - Method=GET,POST,PUT,DELETE
          filters:
            - StripPrefix=1
            - TokenRelay=
            - RemoveRequestHeader=user
            - AddProviderInfoHeader=
            - RemoveRequestHeader=cookie
            - RemoveRequestHeader=authorization
  main:
    web-application-type: reactive
  security:
    oauth2:
      client:
        registration:
          yandex:
            client-id: 9d46780631ad4372b48ec4a44a56b75b
            client-secret: e56e640b3186472687f268d854c6fdd2
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_basic
            redirect-uri: http://localhost:8080/login/oauth2/code/yandex
        provider:
          yandex:
            authorization-uri: https://oauth.yandex.ru/authorize
            token-uri: https://oauth.yandex.ru/token
            user-info-uri: https://login.yandex.ru/info
            user-name-attribute: login
management:
  endpoints:
    web:
      exposure:
        include: "health,info"
  endpoint:
    health:
      show-details: ALWAYS