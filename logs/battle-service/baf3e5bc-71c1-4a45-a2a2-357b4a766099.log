2024-01-27T14:47:00.146+03:00  INFO 908551 --- [battle-service] [main] r.a.b.BattleServiceApplication           : Starting BattleServiceApplication using Java 21.0.1 with PID 908551 (/home/abradox/work/BattleBotsPlatform/battle-service/target/classes started by abradox in /home/abradox/work/BattleBotsPlatform)
2024-01-27T14:47:00.146+03:00  INFO 908551 --- [battle-service] [main] r.a.b.BattleServiceApplication           : No active profile set, falling back to 1 default profile: "default"
2024-01-27T14:47:00.518+03:00  INFO 908551 --- [battle-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-01-27T14:47:00.519+03:00  INFO 908551 --- [battle-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-01-27T14:47:00.599+03:00  INFO 908551 --- [battle-service] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 74 ms. Found 1 Redis repository interface.
2024-01-27T14:47:00.691+03:00  INFO 908551 --- [battle-service] [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d87f9f92-5adc-3023-a043-28ca7a7eb5c5
2024-01-27T14:47:00.740+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-01-27T14:47:00.741+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.742+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.745+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration' of type [org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.746+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.746+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientsDefaultsMappingsProvider' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration$$Lambda/0x00007fc690503f60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.747+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'defaultsBindHandlerAdvisor' of type [org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.749+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'spring.cloud.loadbalancer-org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.751+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.752+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.752+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'default.org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration.LoadBalancerClientSpecification' of type [org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.752+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerClientFactory' of type [org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.753+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'blockingLoadBalancerClient' of type [org.springframework.cloud.loadbalancer.blocking.client.BlockingLoadBalancerClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.756+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerServiceInstanceCookieTransformer' of type [org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.757+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'xForwarderHeadersTransformer' of type [org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.757+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.758+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerRequestFactory' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.758+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig' of type [org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.759+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancedRetryFactory' of type [org.springframework.cloud.loadbalancer.blocking.retry.BlockingLoadBalancedRetryFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.760+03:00  WARN 908551 --- [battle-service] [main] trationDelegate$BeanPostProcessorChecker : Bean 'loadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-01-27T14:47:00.847+03:00  INFO 908551 --- [battle-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8085 (http)
2024-01-27T14:47:00.852+03:00  INFO 908551 --- [battle-service] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-01-27T14:47:00.853+03:00  INFO 908551 --- [battle-service] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.17]
2024-01-27T14:47:00.873+03:00  INFO 908551 --- [battle-service] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-01-27T14:47:00.873+03:00  INFO 908551 --- [battle-service] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 702 ms
2024-01-27T14:47:01.002+03:00  INFO 908551 --- [battle-service] [main] org.redisson.Version                     : Redisson 3.25.2
2024-01-27T14:47:01.431+03:00  INFO 908551 --- [battle-service] [redisson-netty-1-6] o.r.c.pool.MasterPubSubConnectionPool    : 1 connections initialized for 82.97.255.239/82.97.255.239:6379
2024-01-27T14:47:06.267+03:00  INFO 908551 --- [battle-service] [redisson-netty-1-19] o.r.c.pool.MasterConnectionPool          : 24 connections initialized for 82.97.255.239/82.97.255.239:6379
2024-01-27T14:47:06.721+03:00  INFO 908551 --- [battle-service] [main] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-01-27T14:47:06.733+03:00  WARN 908551 --- [battle-service] [main] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-01-27T14:47:06.737+03:00  INFO 908551 --- [battle-service] [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 17 endpoint(s) beneath base path '/actuator'
2024-01-27T14:47:06.784+03:00  INFO 908551 --- [battle-service] [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-01-27T14:47:06.797+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-01-27T14:47:06.799+03:00  INFO 908551 --- [battle-service] [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-01-27T14:47:06.807+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-01-27T14:47:06.807+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-01-27T14:47:06.807+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-01-27T14:47:06.807+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-01-27T14:47:06.807+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-01-27T14:47:06.807+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-01-27T14:47:06.807+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-01-27T14:47:06.934+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-01-27T14:47:06.936+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-01-27T14:47:06.937+03:00  INFO 908551 --- [battle-service] [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-01-27T14:47:06.939+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1706356026939 with initial instances count: 1
2024-01-27T14:47:06.941+03:00  INFO 908551 --- [battle-service] [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application BATTLE-SERVICE with eureka with status UP
2024-01-27T14:47:06.941+03:00  INFO 908551 --- [battle-service] [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1706356026941, current=UP, previous=STARTING]
2024-01-27T14:47:06.942+03:00  INFO 908551 --- [battle-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BATTLE-SERVICE/192.168.50.150:battle-service:3f0c73a4-4a3e-447c-8a25-2049b4749931: registering service...
2024-01-27T14:47:06.947+03:00  INFO 908551 --- [battle-service] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8085 (http) with context path ''
2024-01-27T14:47:06.948+03:00  INFO 908551 --- [battle-service] [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8085
2024-01-27T14:47:06.949+03:00  INFO 908551 --- [battle-service] [main] o.s.a.r.c.CachingConnectionFactory       : Attempting to connect to: [82.97.244.140:5672]
2024-01-27T14:47:06.962+03:00  INFO 908551 --- [battle-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_BATTLE-SERVICE/192.168.50.150:battle-service:3f0c73a4-4a3e-447c-8a25-2049b4749931 - registration status: 204
2024-01-27T14:47:07.396+03:00  INFO 908551 --- [battle-service] [main] o.s.a.r.c.CachingConnectionFactory       : Created new connection: rabbitConnectionFactory#73dd0f23:0/SimpleConnection@11d557a5 [delegate=amqp://gen_user@82.97.244.140:5672/default_vhost, localPort=37654]
2024-01-27T14:47:08.713+03:00  INFO 908551 --- [battle-service] [main] r.a.b.BattleServiceApplication           : Started BattleServiceApplication in 8.803 seconds (process running for 9.05)
2024-01-27T14:47:08.810+03:00  INFO 908551 --- [battle-service] [RMI TCP Connection(2)-127.0.0.1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-01-27T14:47:08.810+03:00  INFO 908551 --- [battle-service] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2024-01-27T14:47:08.811+03:00  INFO 908551 --- [battle-service] [RMI TCP Connection(2)-127.0.0.1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 0 ms
2024-01-27T14:52:06.808+03:00  INFO 908551 --- [battle-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
